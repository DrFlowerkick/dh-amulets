name: General Rust CI for dh-amulets

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Rust Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo tests
        run: cargo test

  fmt:
    name: Rustfmt Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --check

  clippy:
    name: Clippy Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - name: Run clippy
        run: cargo clippy -- -D warnings

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Run tarpaulin
        run: cargo tarpaulin --verbose --workspace

  e2e:
    name: End-to-End Tests (Playwright)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      LEPTOS_ENV: github

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🦀 Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: 🎯 Add wasm32 target for Leptos
        run: rustup target add wasm32-unknown-unknown

      - name: 🛠️ Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: 📦 Install cargo-leptos CLI
        run: cargo install cargo-leptos 

      - name: 📦 Set up Node.js for Playwright
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: end2end/package-lock.json

      - name: 📦 Install Playwright + browsers
        working-directory: end2end
        run: |
          npm ci
          npx playwright install --with-deps

      - name: 🧪 Run E2E tests via cargo leptos
        run: cargo leptos end-to-end

      - name: 📤 Upload Playwright HTML report (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: end2end/playwright-report
